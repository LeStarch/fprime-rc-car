<?xml version="1.0" encoding="UTF-8"?>
<assembly name = "GwcRobot">

    <!-- Import component declarations -->

    <import_component_type>Svc/FatalHandler/FatalHandlerComponentAi.xml</import_component_type>
    <import_component_type>Svc/ActiveRateGroup/ActiveRateGroupComponentAi.xml</import_component_type>
    <import_component_type>Svc/TlmChan/TlmChanComponentAi.xml</import_component_type>
    <import_component_type>Svc/CmdDispatcher/CommandDispatcherComponentAi.xml</import_component_type>
    <import_component_type>Svc/PrmDb/PrmDbComponentAi.xml</import_component_type>
    <import_component_type>Svc/ActiveRateGroup/ActiveRateGroupComponentAi.xml</import_component_type>
    <import_component_type>Svc/CmdSequencer/CmdSequencerComponentAi.xml</import_component_type>
    <import_component_type>Svc/ActiveRateGroup/ActiveRateGroupComponentAi.xml</import_component_type>
    <import_component_type>Svc/FileUplink/FileUplinkComponentAi.xml</import_component_type>
    <import_component_type>Svc/BufferManager/BufferManagerComponentAi.xml</import_component_type>
    <import_component_type>Svc/AssertFatalAdapter/AssertFatalAdapterComponentAi.xml</import_component_type>
    <import_component_type>Svc/Health/HealthComponentAi.xml</import_component_type>
    <import_component_type>Svc/BufferManager/BufferManagerComponentAi.xml</import_component_type>
    <import_component_type>Svc/ActiveLogger/ActiveLoggerComponentAi.xml</import_component_type>
    <import_component_type>Svc/LinuxTimer/LinuxTimerComponentAi.xml</import_component_type>
    <import_component_type>Svc/Time/TimeComponentAi.xml</import_component_type>
    <import_component_type>Svc/RateGroupDriver/RateGroupDriverComponentAi.xml</import_component_type>
    <import_component_type>Svc/FileDownlink/FileDownlinkComponentAi.xml</import_component_type>
    <import_component_type>Svc/PassiveConsoleTextLogger/PassiveTextLoggerComponentAi.xml</import_component_type>
    <import_component_type>Drv/ByteStreamDriverModel/ByteStreamDriverComponentAi.xml</import_component_type>
    <import_component_type>Svc/StaticMemory/StaticMemoryComponentAi.xml</import_component_type>
    <import_component_type>Svc/Framer/FramerComponentAi.xml</import_component_type>
    <import_component_type>Svc/Deframer/DeframerComponentAi.xml</import_component_type>
    <import_component_type>Drv/LinuxI2cDriver/LinuxI2cDriverComponentAi.xml</import_component_type>
    <import_component_type>Drv/ByteStreamDriverModel/ByteStreamDriverComponentAi.xml</import_component_type>

    <import_component_type>Drivers/PCA9685/Pca9685ComponentAi.xml</import_component_type>
    <import_component_type>Drivers/StepperMotor/StepperMotorComponentAi.xml</import_component_type>
    <import_component_type>MotionControllers/TwoMotorControl/TwoMotorControlComponentAi.xml</import_component_type>

    <!-- Declare component instances - must match names in Components.hpp -->

    <instance namespace="Svc" name="fatalHandler" type="FatalHandler" base_id="100"  base_id_window="20" />

    <instance namespace="Svc" name="rateGroup10HzComp" type="ActiveRateGroup" base_id="200"  base_id_window="20" />

    <instance namespace="Svc" name="rateGroup1HzComp" type="ActiveRateGroup" base_id="300"  base_id_window="20" />

    <instance namespace="Svc" name="chanTlm" type="TlmChan" base_id="400"  base_id_window="20" />

    <instance namespace="Svc" name="cmdDisp" type="CommandDispatcher" base_id="500"  base_id_window="20" />

    <instance namespace="Svc" name="prmDb" type="PrmDb" base_id="600"  base_id_window="20" />

    <instance namespace="Svc" name="cmdSeq" type="CmdSequencer" base_id="700"  base_id_window="23" />

    <instance namespace="Svc" name="fileUplink" type="FileUplink" base_id="800"  base_id_window="20" />

    <instance namespace="Svc" name="fileUplinkBufferManager" type="BufferManager" base_id="900"  base_id_window="20" />

    <instance namespace="Svc" name="fatalAdapter" type="AssertFatalAdapter" base_id="1000"  base_id_window="20" />

    <instance namespace="Svc" name="health" type="Health" base_id="1100"  base_id_window="20" />

    <instance namespace="Svc" name="staticMemory" type="StaticMemory" base_id="1200"  base_id_window="20" />
    <instance namespace="Svc" name="downlink" type="Framer" base_id="1220"  base_id_window="20" />
    <instance namespace="Svc" name="uplink" type="Deframer" base_id="1240"  base_id_window="20" />

    <!-- Communications driver. May be swapped with other comm drivers like UART -->
    <!-- Note: here we have tcp reliable uplink, and Udp (low latency) downlink -->
    <instance namespace="Drv" name="comm" type="ByteStreamDriverModel" base_id="1260" base_id_window="20" />


    <instance namespace="Svc" name="eventLogger" type="ActiveLogger" base_id="1400"  base_id_window="20" />

    <instance namespace="Svc" name="linuxTime" type="Time" base_id="1500"  base_id_window="20" />

    <instance namespace="Svc" name="linuxTimer" type="LinuxTimer" base_id="1600"  base_id_window="20" />

    <instance namespace="Svc" name="rateGroupDriverComp" type="RateGroupDriver" base_id="1700"  base_id_window="20" />

    <instance namespace="Svc" name="fileDownlink" type="FileDownlink" base_id="1800"  base_id_window="20" />

    <instance namespace="Svc" name="textLogger" type="PassiveTextLogger" base_id="1900"  base_id_window="20" />

    <instance namespace="Drv" name="i2c" type="LinuxI2cDriver" base_id="2000"  base_id_window="20" />
    <instance namespace="Drivers" name="pca9685" type="Pca9685" base_id="2100"  base_id_window="20" />
    <instance namespace="Drivers" name="stepper0" type="StepperMotor" base_id="2200"  base_id_window="20" />
    <instance namespace="Drivers" name="stepper1" type="StepperMotor" base_id="2300"  base_id_window="20" />

    <instance namespace="GwcRobot" name="motion" type="TwoMotorControl" base_id="2400"  base_id_window="20" />

    <!-- Connections -->
    <!-- Communications driver connections -->
    <connection name = "UplinkDrvAllocate">
        <source component = "comm" port = "allocate" type = "Fw::BufferGet" num = "0"/>
        <target component = "staticMemory" port = "bufferAllocate" type = "Fw::BufferGet" num = "0"/>
    </connection>
    <connection name = "UplinkRecv">
        <source component = "comm" port = "recv" type = "Drv::ByteStreamSend" num = "0"/>
        <target component = "uplink" port = "framedIn" type = "Drv::ByteStreamSend" num = "0"/>
    </connection>
    <connection name = "UplinkDeallocate">
        <source component = "uplink" port = "framedDeallocate" type = "Fw::BufferSend" num = "0"/>
        <target component = "staticMemory" port = "bufferDeallocate" type = "Fw::BufferSend" num = "0"/>
    </connection>
    <!-- Uplink data connections -->
    <connection name = "UplinkFileAllocate">
        <source component = "uplink" port = "bufferAllocate" type = "BufferGet" num = "0"/>
        <target component = "fileUplinkBufferManager" port = "bufferGetCallee" type = "BufferGet" num = "0"/>
    </connection>
    <connection name = "UplinkCommands">
        <source component = "uplink" port = "comOut" type = "Com" num = "0"/>
        <target component = "cmdDisp" port = "seqCmdBuff" type = "Com" num = "0"/>
    </connection>
    <connection name = "UplinkBuffers">
        <source component = "uplink" port = "bufferOut" type = "BufferSend" num = "0"/>
        <target component = "fileUplink" port = "bufferSendIn" type = "BufferSend" num = "0"/>
    </connection>
    <connection name = "UplinkFileAllocate">
        <source component = "uplink" port = "bufferDeallocate" type = "BufferSend" num = "0"/>
        <target component = "fileUplinkBufferManager" port = "bufferSendIn" type = "BufferSend" num = "0"/>
    </connection>
    <connection name = "fileUplinkBuffIn">
        <source component = "fileUplink" port = "bufferSendOut" type = "BufferSend" num = "0"/>
        <target component = "fileUplinkBufferManager" port = "bufferSendIn" type = "BufferSend" num = "0"/>
    </connection>

    <!-- Downlink ports -->
    <connection name = "DownlinkAllocate">
        <source component = "downlink" port = "framedAllocate" type = "Fw::BufferGet" num = "0"/>
        <target component = "staticMemory" port = "bufferAllocate" type = "Drv::BufferGet" num = "1"/>
    </connection>
    <connection name = "DownlinkSend">
        <source component = "downlink" port = "framedOut" type = "Fw::BufferSend" num = "0"/>
        <target component = "comm" port = "send" type = "Drv::ByteStreamSend" num = "0"/>
    </connection>
    <connection name = "DownlinkDeallocate">
        <source component = "comm" port = "deallocate" type = "Fw::BufferSend" num = "0"/>
        <target component = "staticMemory" port = "bufferDeallocate" type = "Fw::BufferSend" num = "1"/>
    </connection>

    <!-- Downlink data connections -->
    <connection name = "eventLoggerPkts">
        <source component = "eventLogger" port = "PktSend" type = "Com" num = "0"/>
        <target component = "downlink" port = "comIn" type = "Com" num = "0"/>
    </connection>
    <connection name = "chanTlmPkts">
        <source component = "chanTlm" port = "PktSend" type = "Com" num = "0"/>
        <target component = "downlink" port = "comIn" type = "Com" num = "0"/>
    </connection>
    <connection name = "fileDownlinkBufferSend">
        <source component = "fileDownlink" port = "bufferSendOut" type = "BufferSend" num = "0"/>
        <target component = "downlink" port = "bufferIn" type = "BufferSend" num = "0"/>
    </connection>
    <connection name = "fileDownlinkBufferReturn">
        <source component = "downlink" port = "bufferDeallocate" type = "BufferSend" num = "0"/>
        <target component = "fileDownlink" port = "bufferReturn" type = "BufferSend" num = "0"/>
    </connection>

    <!-- Command Registration/Dispatch/Reply Connections -->

    <!-- Command Registration Ports - Registration port number must match dispatch port for each component -->

    <connection name = "EventLoggerReg">
        <source component = "eventLogger" port = "CmdReg" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "0"/>
    </connection>
    <connection name = "CmdDispReg">
        <source component = "cmdDisp" port = "CmdReg" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "1"/>
    </connection>
    <connection name = "HealthReg">
        <source component = "health" port = "CmdReg" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "2"/>
    </connection>
    <connection name = "PrmDbReg">
        <source component = "prmDb" port = "CmdReg" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "3"/>
    </connection>
    <connection name = "CmdSeqReg">
        <source component = "cmdSeq" port = "cmdRegOut" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "4"/>
    </connection>
    <connection name = "FileDownlinkReg">
        <source component = "fileDownlink" port = "cmdRegOut" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "5"/>
    </connection>
    <connection name = "stepper0cmdReg">
        <source component = "stepper0" port = "cmdRegOut" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "6"/>
    </connection>
    <connection name = "stepper1cmdReg">
        <source component = "stepper1" port = "cmdRegOut" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "7"/>
    </connection>
    <connection name = "MotionCmdReg">
        <source component = "motion" port = "cmdRegOut" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "8"/>
    </connection>

    <!-- Command Dispatch Ports - Dispatch port number must match registration port for each component -->

    <connection name = "EventLoggerDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "0"/>
        <target component = "eventLogger" port = "CmdDisp" type = "Cmd" num = "0"/>
    </connection>
    <connection name = "CmdDispDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "1"/>
        <target component = "cmdDisp" port = "CmdDisp" type = "Cmd" num = "0"/>
    </connection>
    <connection name = "HealthDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "2"/>
        <target component = "health" port = "CmdDisp" type = "Cmd" num = "0"/>
    </connection>
    <connection name = "PrmDbDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "3"/>
        <target component = "prmDb" port = "CmdDisp" type = "Cmd" num = "0"/>
    </connection>
    <connection name = "CmdSeqDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "4"/>
        <target component = "cmdSeq"  port = "cmdIn"       type = "Cmd" num = "0"/>
    </connection>
    <connection name = "FileDownlinkDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "5"/>
        <target component = "fileDownlink" port = "cmdIn" type = "Cmd" num = "0"/>
    </connection>
    <connection name = "stepper0cmdDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "6"/>
        <target component = "stepper0" port = "cmdIn" type = "Cmd" num = "0"/>
    </connection>
    <connection name = "stepper1cmdDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "7"/>
        <target component = "stepper1" port = "cmdIn" type = "Cmd" num = "0"/>
    </connection>
    <connection name = "motionCmdDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "8"/>
        <target component = "motion" port = "cmdIn" type = "Cmd" num = "0"/>
    </connection>

    <!-- Command Reply Ports - Go to the same response port on the dispatcher -->
    <connection name = "EventLoggerReply">
        <source component = "eventLogger" port = "CmdStatus" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
    </connection>
    <connection name = "CmdSeqReply">
        <source component = "cmdSeq" port = "cmdResponseOut" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
    </connection>
    <connection name = "PrmDbReply">
        <source component = "prmDb" port = "CmdStatus" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
    </connection>
    <connection name = "CmdDispReply">
        <source component = "cmdDisp" port = "CmdStatus" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
    </connection>
    <connection name = "HealthReply">
        <source component = "health" port = "CmdStatus" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
    </connection>
    <connection name = "FileDownlinkReply">
        <source component = "fileDownlink" port = "cmdResponseOut" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
    </connection>
    <connection name = "stepper0cmdReply">
        <source component = "stepper0" port = "cmdResponseOut" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
    </connection>
    <connection name = "stepper1cmdReply">
        <source component = "stepper1" port = "cmdResponseOut" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
    </connection>
    <connection name = "motionCmdReply">
        <source component = "motion" port = "cmdResponseOut" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
    </connection>


    <!-- Sequencer Connections - should not conflict with uplink port -->

    <connection name = "SeqCompStatus">
        <source component = "cmdDisp" port = "seqCmdStatus" type = "CmdResponse" num = "1"/>
        <target component = "cmdSeq" port = "cmdResponseIn" type = "CmdResponse" num = "0"/>
    </connection>
    <!-- Input port number needs to be the same as previous dispatch -->
    <connection name = "SeqCmdSend">
        <source component = "cmdSeq" port = "comCmdOut" type = "Com" num = "0"/>
        <target component = "cmdDisp" port = "seqCmdBuff" type = "Com" num = "1"/>
    </connection>

    <!-- Event Logger Binary Connections -->

    <connection name = "PrmDbLog">
        <source component = "prmDb" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "FileUplinkLog">
        <source component = "fileUplink" port = "eventOut" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "EventLoggerLog">
        <source component = "eventLogger" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "FileUplinkBufferManagerLog">
        <source component = "fileUplinkBufferManager" port = "eventOut" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "CmdDispLog">
        <source component = "cmdDisp" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "CmdSeqLog">
        <source component = "cmdSeq" port = "logOut" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "FatalAdapterLog">
        <source component = "fatalAdapter" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "HealthLog">
        <source component = "health" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "FileDownlinkLog">
        <source component = "fileDownlink" port = "eventOut" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "RateGroup10HzCompLog">
        <source component = "rateGroup10HzComp" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "RateGroup1HzCompLog">
        <source component = "rateGroup1HzComp" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "stepper0log">
        <source component = "stepper0" port = "eventOut" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "stepper1log">
        <source component = "stepper1" port = "eventOut" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "motionLog">
        <source component = "motion" port = "eventOut" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>

    <!-- Event Logger Text Connections -->

    <connection name = "CmdSeqTextLog">
        <source component = "cmdSeq" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
    </connection>
    <connection name = "EventLoggerTextLog">
        <source component = "eventLogger" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
    </connection>
    <connection name = "HealthTextLog">
        <source component = "health" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
    </connection>
    <connection name = "FatalAdapterTextLog">
        <source component = "fatalAdapter" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
    </connection>
    <connection name = "rateGroup10HzCompTextLog">
        <source component = "rateGroup10HzComp" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
    </connection>
    <connection name = "rateGroup1HzCompTextLog">
        <source component = "rateGroup1HzComp" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
    </connection>
    <connection name = "PrmDbTextLogger">
        <source component = "prmDb" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
    </connection>
    <connection name = "CmdDispTextLogger">
        <source component = "cmdDisp" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
    </connection>
    <connection name = "stepper0logText">
        <source component = "stepper0" port = "eventTextOut" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
    </connection>
    <connection name = "stepper1logText">
        <source component = "stepper1" port = "eventTextOut" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
    </connection>
    <connection name = "motionLogText">
        <source component = "motion" port = "eventTextOut" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
    </connection>

    <!-- Telemetry Connections -->

    <connection name = "fileDownlinkTlm">
        <source component = "fileDownlink" port = "tlmOut" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "FileUplinkBufferManagerTlm">
        <source component = "fileUplinkBufferManager" port = "tlmOut" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "FileUplinkTlm">
        <source component = "fileUplink" port = "tlmOut" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "cmdSeqTlm">
        <source component = "cmdSeq" port = "tlmOut" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "cmdDispTlm">
        <source component = "cmdDisp" port = "Tlm" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "rateGroup10HzCompTlm">
        <source component = "rateGroup10HzComp" port = "Tlm" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "healthTlm">
        <source component = "health" port = "Tlm" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "stepper0tlm">
        <source component = "stepper0" port = "tlmOut" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "stepper1tlm">
        <source component = "stepper1" port = "tlmOut" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "motionTlm">
        <source component = "motion" port = "tlmOut" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>

    <!-- Parameter Connections -->

    <!-- Time Connections -->
    <connection name = "prmDbTime">
        <source component = "prmDb" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "eventLoggerTime">
        <source component = "eventLogger" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "rateGroup10HzCompTime">
        <source component = "rateGroup10HzComp" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "cmdSeqTime">
        <source component = "cmdSeq" port = "timeCaller" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "healthTime">
        <source component = "health" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "fileUplinkBufferManagerTime">
        <source component = "fileUplinkBufferManager" port = "timeCaller" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "cmdDispTime">
        <source component = "cmdDisp" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "fileUplinkTime">
        <source component = "fileUplink" port = "timeCaller" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "fileDownlinkTmp">
        <source component = "fileDownlink" port = "timeCaller" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "fatalAdapterTime">
        <source component = "fatalAdapter" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "stepper0time">
        <source component = "stepper0" port = "timeCaller" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "stepper1time">
        <source component = "stepper1" port = "timeCaller" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>

    <!-- Rate Group Connections -->

    <!-- Linux Timer Connection -->
    <connection name = "LinuxTimer">
        <source component = "linuxTimer" port = "CycleOut" type = "Cycle" num = "0"/>
        <target component = "rateGroupDriverComp" port = "CycleIn" type = "Cycle" num = "0"/>
    </connection>

    <!-- 10Hz Rate Group -->
    <connection name = "rateGroupDriverComp10Hz">
        <source component = "rateGroupDriverComp" port = "CycleOut" type = "Cycle" num = "0"/>
        <target component = "rateGroup10HzComp" port = "CycleIn" type = "Cycle" num = "0"/>
    </connection>
    <connection name = "fileDownlink10Hz">
        <source component = "rateGroup10HzComp" port = "RateGroupMemberOut" type = "Sched" num = "0"/>
        <target component = "fileDownlink" port = "Run" type = "Sched" num = "0"/>
    </connection>

    <!-- 1Hz Rate Group -->
    <connection name = "rateGroupDriverCompRg1Hz">
        <source component = "rateGroupDriverComp" port = "CycleOut" type = "Cycle" num = "1"/>
        <target component = "rateGroup1HzComp" port = "CycleIn" type = "Cycle" num = "0"/>
    </connection>
    <connection name = "chanTlmRg">
        <source component = "rateGroup1HzComp" port = "RateGroupMemberOut" type = "Sched" num = "0"/>
        <target component = "chanTlm" port = "Run" type = "Sched" num = "0"/>
    </connection>
    <connection name = "healthRg">
        <source component = "rateGroup1HzComp" port = "RateGroupMemberOut" type = "Sched" num = "1"/>
        <target component = "health" port = "Run" type = "Sched" num = "0"/>
    </connection>
    <connection name = "cmdSeq">
        <source component = "rateGroup1HzComp" port = "RateGroupMemberOut" type = "Sched" num = "2"/>
        <target component = "cmdSeq" port = "schedIn" type = "Sched" num = "0"/>
    </connection>

    <!-- Health Connections -->

    <!-- The PingSend output port number should match the PingReturn input port number -->
    <!-- Each port number pair must be unique -->
    <!-- This order must match the table in Topology.cpp -->

    <connection name = "rateGroup10HzCompPingIn">
        <source component = "health" port = "PingSend" type = "Ping" num = "0"/>
        <target component = "rateGroup10HzComp" port = "PingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "rateGroup10HzCompPingOut">
        <source component = "rateGroup10HzComp" port = "PingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "0"/>
    </connection>

    <connection name = "rateGroup1HzCompPingIn">
        <source component = "health" port = "PingSend" type = "Ping" num = "1"/>
        <target component = "rateGroup1HzComp" port = "PingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "rateGroup1HzCompPingOut">
        <source component = "rateGroup1HzComp" port = "PingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "1"/>
    </connection>

    <connection name = "cmdDispPingIn">
        <source component = "health" port = "PingSend" type = "Ping" num = "2"/>
        <target component = "cmdDisp" port = "pingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "cmdDispPingOut">
        <source component = "cmdDisp" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "2"/>
    </connection>

    <connection name = "cmdSeqPingIn">
        <source component = "health" port = "PingSend" type = "Ping" num = "3"/>
        <target component = "cmdSeq" port = "pingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "cmdSeqPingOut">
        <source component = "cmdSeq" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "3"/>
    </connection>

    <connection name = "chanTlmPingIn">
        <source component = "health" port = "PingSend" type = "Ping" num = "4"/>
        <target component = "chanTlm" port = "pingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "chanTlmPingOut">
        <source component = "chanTlm" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "4"/>
    </connection>

    <connection name = "prmDbPingIn">
        <source component = "health" port = "PingSend" type = "Ping" num = "5"/>
        <target component = "prmDb" port = "pingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "prmDbPingOut">
        <source component = "prmDb" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "5"/>
    </connection>

    <connection name = "fileDownlinkPingIn">
        <source component = "health" port = "PingSend" type = "Ping" num = "6"/>
        <target component = "fileDownlink" port = "pingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "fileDownlinkPingOut">
        <source component = "fileDownlink" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "6"/>
    </connection>

    <connection name = "fileUplinkPingIn">
        <source component = "health" port = "PingSend" type = "Ping" num = "8"/>
        <target component = "fileUplink" port = "pingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "fileUplinkPingOut">
        <source component = "fileUplink" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "8"/>
    </connection>

    <!-- Fault Connections -->
    <connection name = "eventLoggerFatalOut">
        <source component = "eventLogger" port = "FatalAnnounce" type = "FatalEvent" num = "0"/>
        <target component = "fatalHandler" port = "FatalReceive" type = "FatalEvent" num = "0"/>
    </connection>

    <!-- Driver connections -->
    <connection name="motionToStepper0">
        <source component = "motion" port = "motor" type = "GwcRobot::Spin" num = "0" />
        <target component = "stepper0" port = "spin" type = "GwcRobot::Spin" num = "0" />
    </connection>
    <connection name="motionToStepper1">
        <source component = "motion" port = "motor" type = "GwcRobot::Spin" num = "1" />
        <target component = "stepper1" port = "spin" type = "GwcRobot::Spin" num = "0" />
    </connection>

    <!-- Stepper0 - PWM connections. Note: ORDER MATTERS.  Order is borrowed from the Adafruit driver -->
    <connection name="stepper0ToPcaAin1">
        <source component = "stepper0" port = "pwm" type = "GwcRobot::Pwm" num = "0" />
        <target component = "pca9685" port = "pwm" type = "GwcRobot::Pwm" num = "9"/>
    </connection>
    <connection name="stepper0ToPcaAin2">
        <source component = "stepper0" port = "pwm" type = "GwcRobot::Pwm" num = "1" />
        <target component = "pca9685" port = "pwm" type = "GwcRobot::Pwm" num = "11"/>
    </connection>
    <connection name="stepper0ToPcaBin1">
        <source component = "stepper0" port = "pwm" type = "GwcRobot::Pwm" num = "2" />
        <target component = "pca9685" port = "pwm" type = "GwcRobot::Pwm" num = "10"/>
    </connection>
    <connection name="stepper0ToPcaBin2">
        <source component = "stepper0" port = "pwm" type = "GwcRobot::Pwm" num = "3" />
        <target component = "pca9685" port = "pwm" type = "GwcRobot::Pwm" num = "12"/>
    </connection>
    <!-- Stepper0 - power(PWM) connections. Note: ORDER MATTERS.  Order is borrowed from the Adafruit driver -->
    <connection name="stepper0ToPower1">
        <source component = "stepper0" port = "power" type = "GwcRobot::Pwm" num = "0" />
        <target component = "pca9685" port = "pwm" type = "GwcRobot::Pwm" num = "8"/>
    </connection>
    <connection name="stepper0ToPower22">
        <source component = "stepper0" port = "power" type = "GwcRobot::Pwm" num = "1" />
        <target component = "pca9685" port = "pwm" type = "GwcRobot::Pwm" num = "13"/>
    </connection>
    <!-- Stepper1 - PWM connections. Note: ORDER MATTERS.  Order is borrowed from the Adafruit driver -->
    <connection name="stepper1ToPcaAin1">
        <source component = "stepper1" port = "pwm" type = "GwcRobot::Pwm" num = "0" />
        <target component = "pca9685" port = "pwm" type = "GwcRobot::Pwm" num = "3"/>
    </connection>
    <connection name="stepper1ToPcaAin2">
        <source component = "stepper1" port = "pwm" type = "GwcRobot::Pwm" num = "1" />
        <target component = "pca9685" port = "pwm" type = "GwcRobot::Pwm" num = "5"/>
    </connection>
    <connection name="stepper1ToPcaBin1">
        <source component = "stepper1" port = "pwm" type = "GwcRobot::Pwm" num = "2" />
        <target component = "pca9685" port = "pwm" type = "GwcRobot::Pwm" num = "4"/>
    </connection>
    <connection name="stepper1ToPcaBin2">
        <source component = "stepper1" port = "pwm" type = "GwcRobot::Pwm" num = "3" />
        <target component = "pca9685" port = "pwm" type = "GwcRobot::Pwm" num = "6"/>
    </connection>
    <!-- Stepper1 - power(PWM) connections. Note: ORDER MATTERS.  Order is borrowed from the Adafruit driver -->
    <connection name="stepper1ToPower1">
        <source component = "stepper1" port = "power" type = "GwcRobot::Pwm" num = "0" />
        <target component = "pca9685" port = "pwm" type = "GwcRobot::Pwm" num = "7"/>
    </connection>
    <connection name="stepper1ToPower22">
        <source component = "stepper1" port = "power" type = "GwcRobot::Pwm" num = "1" />
        <target component = "pca9685" port = "pwm" type = "GwcRobot::Pwm" num = "2"/>
    </connection>

    <!-- To I2C -->
    <connection name="pcaToI2c">
        <source component = "pca9685" port = "i2cWrite" type = "Drv::I2c" num = "0" />
        <target component = "i2c" port = "write" type = "Drv::I2c" num = "0"/>
    </connection>

    <!-- GPIO connections -->

    <!-- UART connection -->

    <!-- SPI connection -->

</assembly>
