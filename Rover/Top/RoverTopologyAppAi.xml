<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../Autocoders/schema/ISF/topology_schema.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<assembly name = "Rover">

     <!-- Immport component declarations -->

    <import_component_type>Svc/FatalHandler/FatalHandlerComponentAi.xml</import_component_type>
    <import_component_type>Svc/ActiveRateGroup/ActiveRateGroupComponentAi.xml</import_component_type>
    <import_component_type>Svc/TlmChan/TlmChanComponentAi.xml</import_component_type>
    <import_component_type>Svc/CmdDispatcher/CommandDispatcherComponentAi.xml</import_component_type>
    <import_component_type>Svc/PrmDb/PrmDbComponentAi.xml</import_component_type>
    <import_component_type>Svc/ActiveRateGroup/ActiveRateGroupComponentAi.xml</import_component_type>
    <import_component_type>Svc/CmdSequencer/CmdSequencerComponentAi.xml</import_component_type>
    <import_component_type>Svc/ActiveRateGroup/ActiveRateGroupComponentAi.xml</import_component_type>
    <import_component_type>Svc/FileUplink/FileUplinkComponentAi.xml</import_component_type>
    <import_component_type>Svc/BufferManager/BufferManagerComponentAi.xml</import_component_type>
    <import_component_type>Svc/AssertFatalAdapter/AssertFatalAdapterComponentAi.xml</import_component_type>
    <import_component_type>Svc/Health/HealthComponentAi.xml</import_component_type>
    <import_component_type>Svc/GroundInterface/GroundInterfaceComponentAi.xml</import_component_type>
    <import_component_type>Svc/BufferManager/BufferManagerComponentAi.xml</import_component_type>
    <import_component_type>Svc/ActiveLogger/ActiveLoggerComponentAi.xml</import_component_type>
    <import_component_type>Svc/LinuxTimer/LinuxTimerComponentAi.xml</import_component_type>
    <import_component_type>Svc/Time/TimeComponentAi.xml</import_component_type>
    <import_component_type>Svc/RateGroupDriver/RateGroupDriverComponentAi.xml</import_component_type>
    <import_component_type>Svc/FileDownlink/FileDownlinkComponentAi.xml</import_component_type>
    <import_component_type>Svc/PassiveConsoleTextLogger/PassiveTextLoggerComponentAi.xml</import_component_type>
    <import_component_type>Drv/LinuxGpioDriver/LinuxGpioDriverComponentAi.xml</import_component_type>
    <import_component_type>Drv/LinuxSerialDriver/LinuxSerialDriverComponentAi.xml</import_component_type>
    <import_component_type>Drv/LinuxSpiDriver/LinuxSpiDriverComponentAi.xml</import_component_type>

    <import_component_type>Drv/SocketIpDriver/SocketIpDriverComponentAi.xml</import_component_type>
    <import_component_type>Drv/LinuxSerialDriver/LinuxSerialDriverComponentAi.xml</import_component_type>
    <import_component_type>Rover/Control/ControlComponentAi.xml</import_component_type>
    <import_component_type>Rover/Gps/GpsComponentAi.xml</import_component_type>

    <!-- Declare component instances - must match names in Components.hpp -->

    <instance namespace="Svc" name="fatalHandler" type="FatalHandler" base_id="100"  base_id_window="20" />
   
    <instance namespace="Svc" name="rateGroup10HzComp" type="ActiveRateGroup" base_id="200"  base_id_window="20" />
   
    <instance namespace="Svc" name="rateGroup1HzComp" type="ActiveRateGroup" base_id="300"  base_id_window="20" />

    <instance namespace="Svc" name="chanTlm" type="TlmChan" base_id="400"  base_id_window="20" />
    
    <instance namespace="Svc" name="cmdDisp" type="CommandDispatcher" base_id="500"  base_id_window="20" />
   
    <instance namespace="Svc" name="prmDb" type="PrmDb" base_id="600"  base_id_window="20" />
   
    <instance namespace="Svc" name="cmdSeq" type="CmdSequencer" base_id="700"  base_id_window="23" />
   
    <instance namespace="Svc" name="fileUplink" type="FileUplink" base_id="800"  base_id_window="20" />
   
    <instance namespace="Svc" name="fileUplinkBufferManager" type="BufferManager" base_id="900"  base_id_window="20" />
   
    <instance namespace="Svc" name="fatalAdapter" type="AssertFatalAdapter" base_id="1000"  base_id_window="20" />
   
    <instance namespace="Svc" name="health" type="Health" base_id="1100"  base_id_window="20" />
   
    <instance namespace="Svc" name="groundIf" type="GroundInterface" base_id="1200"  base_id_window="20" />
   
    <instance namespace="Svc" name="eventLogger" type="ActiveLogger" base_id="1400"  base_id_window="20" />
   
    <instance namespace="Svc" name="linuxTime" type="Time" base_id="1500"  base_id_window="20" />
   
    <instance namespace="Svc" name="linuxTimer" type="LinuxTimer" base_id="1600"  base_id_window="20" />

    <instance namespace="Svc" name="rateGroupDriverComp" type="RateGroupDriver" base_id="1700"  base_id_window="20" />
   
    <instance namespace="Svc" name="fileDownlink" type="FileDownlink" base_id="1800"  base_id_window="20" />
   
    <instance namespace="Svc" name="textLogger" type="PassiveTextLogger" base_id="1900"  base_id_window="20" />
   
    <instance namespace="Drv" name="headlight" type="LinuxGpioDriver" base_id="2100"  base_id_window="100" />
    <instance namespace="Drv" name="left" type="LinuxGpioDriver" base_id="2200"  base_id_window="100" />
    <instance namespace="Drv" name="right" type="LinuxGpioDriver" base_id="2300"  base_id_window="100" />
    <instance namespace="Drv" name="forward" type="LinuxGpioDriver" base_id="2400"  base_id_window="100" />
    <instance namespace="Drv" name="backward" type="LinuxGpioDriver" base_id="2500"  base_id_window="100" />

    <instance namespace="Rover" name="control" type="Control" base_id="2700"  base_id_window="100" />
    <instance namespace="Rover" name="gps" type="Gps" base_id="2900"  base_id_window="100" />

    <!-- Communications driver. May be swapped with other comm drivers like UART -->
    <instance namespace="Drv" name="socketIpDriver" type="SocketIpDriver" base_id="2800" base_id_window="20" />
    <instance namespace="Drv" name="serial" type="LinuxSerialDriver" base_id="3000"  base_id_window="20" />

    <!-- Communications driver connections -->
    <connection name = "CommunicationRecv">
        <source component = "socketIpDriver" port = "recv" type = "Fw::BufferSend" num = "0"/>
        <target component = "groundIf" port = "readCallback" type = "Fw::BufferSend" num = "0"/>
    </connection>
    <connection name = "CommunicationSend">
        <source component = "groundIf" port = "write" type = "Fw::BufferSend" num = "0"/>
        <target component = "socketIpDriver" port = "send" type = "Fw::BufferSend" num = "0"/>
    </connection>

   <!-- Command Registration/Dispatch/Reply Connections -->
   
   <!-- Command Registration Ports - Registration port number must match dispatch port for each component -->

   <connection name = "EventLoggerReg">
        <source component = "eventLogger" port = "CmdReg" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "0"/>
   </connection>
   <connection name = "CmdDispReg">
        <source component = "cmdDisp" port = "CmdReg" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "1"/>
   </connection>
   <connection name = "HealthReg">
        <source component = "health" port = "CmdReg" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "2"/>
   </connection>
   <connection name = "PrmDbReg">
        <source component = "prmDb" port = "CmdReg" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "3"/>
   </connection>
   <connection name = "CmdSeqReg">
        <source component = "cmdSeq" port = "cmdRegOut" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "4"/>
   </connection>
   <connection name = "FileDownlinkReg">
        <source component = "fileDownlink" port = "cmdRegOut" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "5"/>
   </connection>
   <connection name = "RpiDemoReg">
        <source component = "control" port = "CmdReg" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "6"/>
   </connection>
   <connection name = "RpiGpsReg">
        <source component = "gps" port = "cmdRegOut" type = "CmdReg" num = "0"/>
        <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "7"/>
   </connection>

    <!-- Command Dispatch Ports - Dispatch port number must match registration port for each component -->

   <connection name = "EventLoggerDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "0"/>
        <target component = "eventLogger" port = "CmdDisp" type = "Cmd" num = "0"/>
   </connection>
   <connection name = "CmdDispDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "1"/>
        <target component = "cmdDisp" port = "CmdDisp" type = "Cmd" num = "0"/>
   </connection>
   <connection name = "HealthDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "2"/>
        <target component = "health" port = "CmdDisp" type = "Cmd" num = "0"/>
   </connection>
   <connection name = "PrmDbDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "3"/>
        <target component = "prmDb" port = "CmdDisp" type = "Cmd" num = "0"/>
   </connection>
   <connection name = "CmdSeqDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "4"/>
        <target component = "cmdSeq"  port = "cmdIn"       type = "Cmd" num = "0"/>
   </connection>
   <connection name = "FileDownlinkDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "5"/>
        <target component = "fileDownlink" port = "cmdIn" type = "Cmd" num = "0"/>
   </connection>
   <connection name = "RpiDemoDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "6"/>
        <target component = "control" port = "CmdDisp" type = "Cmd" num = "0"/>
   </connection>
   <connection name = "RpiGpsDisp">
        <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "7"/>
        <target component = "gps" port = "cmdIn" type = "Cmd" num = "0"/>
   </connection>
   
    <!-- Command Reply Ports - Go to the same response port on the dispatcher -->

   <connection name = "EventLoggerReply">
      <source component = "eventLogger" port = "CmdStatus" type = "CmdResponse" num = "0"/>
      <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
   </connection>
   <connection name = "CmdSeqReply">
      <source component = "cmdSeq" port = "cmdResponseOut" type = "CmdResponse" num = "0"/>
      <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
   </connection>
   <connection name = "PrmDbReply">
       <source component = "prmDb" port = "CmdStatus" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
   </connection>
   <connection name = "CmdDispReply">
       <source component = "cmdDisp" port = "CmdStatus" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
   </connection>
   <connection name = "HealthReply">
       <source component = "health" port = "CmdStatus" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
   </connection>
   <connection name = "FileDownlinkReply">
       <source component = "fileDownlink" port = "cmdResponseOut" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
   </connection>
   <connection name = "RpiDemoReply">
       <source component = "control" port = "CmdStatus" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
   </connection>
   <connection name = "RpiGpsReply">
       <source component = "gps" port = "cmdResponseOut" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
   </connection>

   <!-- Sequencer Connections - should not conflict with uplink port -->

   <connection name = "SeqCompStatus">
       <source component = "cmdDisp" port = "seqCmdStatus" type = "CmdResponse" num = "1"/>
        <target component = "cmdSeq" port = "cmdResponseIn" type = "CmdResponse" num = "0"/>
   </connection>
   <!-- Input port number needs to be the same as previous dispatch -->
   <connection name = "SeqCmdSend">
       <source component = "cmdSeq" port = "comCmdOut" type = "Com" num = "0"/>
        <target component = "cmdDisp" port = "seqCmdBuff" type = "Com" num = "1"/>
   </connection>
   
   <!-- Event Logger Binary Connections -->
   
   <connection name = "GndIfLog">
       <source component = "groundIf" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "PrmDbLog">
       <source component = "prmDb" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "FileUplinkLog">
       <source component = "fileUplink" port = "eventOut" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "EventLoggerLog">
       <source component = "eventLogger" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "FileUplinkBufferManagerLog">
       <source component = "fileUplinkBufferManager" port = "eventOut" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "CmdDispLog">
       <source component = "cmdDisp" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "CmdSeqLog">
       <source component = "cmdSeq" port = "logOut" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "FatalAdapterLog">
       <source component = "fatalAdapter" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "HealthLog">
       <source component = "health" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "FileDownlinkLog">
       <source component = "fileDownlink" port = "eventOut" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "RateGroup10HzCompLog">
       <source component = "rateGroup10HzComp" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "RateGroup1HzCompLog">
       <source component = "rateGroup1HzComp" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "RpiDemoLog">
       <source component = "control" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "LedLog">
       <source component = "headlight" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "gpio23Log">
       <source component = "forward" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "gpio24Log">
       <source component = "backward" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "gpio25Log">
       <source component = "left" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "gpio8Log">
       <source component = "right" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "GpsLog">
       <source component = "gps" port = "eventOut" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   <connection name = "UartLog">
       <source component = "serial" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
   </connection>
   
   <!-- Event Logger Text Connections -->
   
   <connection name = "CmdSeqTextLog">
       <source component = "cmdSeq" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "EventLoggerTextLog">
       <source component = "eventLogger" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "HealthTextLog">
       <source component = "health" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "GndIfTextLog">
       <source component = "groundIf" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "FatalAdapterTextLog">
       <source component = "fatalAdapter" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "rateGroup10HzCompTextLog">
       <source component = "rateGroup10HzComp" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "rateGroup1HzCompTextLog">
       <source component = "rateGroup1HzComp" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "PrmDbTextLogger">
       <source component = "prmDb" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "CmdDispTextLogger">
       <source component = "cmdDisp" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "RpiDemoTextLogger">
       <source component = "control" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "LedTextLog">
       <source component = "headlight" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "gpio23TextLog">
       <source component = "forward" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "gpio24TextLog">
       <source component = "backward" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "gpio25TextLog">
       <source component = "left" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "gpio8TextLog">
       <source component = "right" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "GpsLog">
       <source component = "gps" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>
   <connection name = "UartLog">
       <source component = "serial" port = "LogText" type = "LogText" num = "0"/>
        <target component = "textLogger" port = "TextLogger" type = "LogText" num = "0"/>
   </connection>

   <!-- Telemetry Connections -->

   <connection name = "fileDownlinkTlm">
       <source component = "fileDownlink" port = "tlmOut" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
   </connection>
   <connection name = "FileUplinkBufferManagerTlm">
       <source component = "fileUplinkBufferManager" port = "tlmOut" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
   </connection>
   <connection name = "FileUplinkTlm">
       <source component = "fileUplink" port = "tlmOut" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
   </connection>
   <connection name = "cmdSeqTlm">
       <source component = "cmdSeq" port = "tlmOut" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
   </connection>
   <connection name = "cmdDispTlm">
       <source component = "cmdDisp" port = "Tlm" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
   </connection>
   <connection name = "rateGroup10HzCompTlm">
       <source component = "rateGroup10HzComp" port = "Tlm" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
   </connection>
   <connection name = "healthTlm">
       <source component = "health" port = "Tlm" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
   </connection>
   <connection name = "RpiDemoTlm">
       <source component = "control" port = "Tlm" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
   </connection>
   <connection name = "GpsTlm">
       <source component = "gps" port = "tlmOut" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
   </connection>
   <connection name = "UartTlm">
       <source component = "serial" port = "Tlm" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
   </connection>

   <!-- Time Connections -->

   <connection name = "prmDbTime">
       <source component = "prmDb" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "eventLoggerTime">
       <source component = "eventLogger" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "rateGroup10HzCompTime">
       <source component = "rateGroup10HzComp" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "cmdSeqTime">
       <source component = "cmdSeq" port = "timeCaller" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "healthTime">
       <source component = "health" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "fileUplinkBufferManagerTime">
       <source component = "fileUplinkBufferManager" port = "timeCaller" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "cmdDispTime">
       <source component = "cmdDisp" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "fileUplinkTime">
       <source component = "fileUplink" port = "timeCaller" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "fileDownlinkTmp">
       <source component = "fileDownlink" port = "timeCaller" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "fatalAdapterTime">
       <source component = "fatalAdapter" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "groundIfTime">
       <source component = "groundIf" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "RpiDemoTime">
       <source component = "control" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "LedDrvTime">
       <source component = "headlight" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "Gpio23DrvTime">
       <source component = "forward" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "Gpio24DrvTime">
       <source component = "backward" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "Gpio25DrvTime">
       <source component = "left" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "Gpio17DrvTime">
       <source component = "right" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "GpsTime">
       <source component = "gps" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>
   <connection name = "UartDrvTime">
       <source component = "serial" port = "Time" type = "Time" num = "0"/>
        <target component = "linuxTime" port = "timeGetPort" type = "Time" num = "0"/>
   </connection>

   <!-- Rate Group Connections -->
   
   <!-- Linux Timer Connection -->
   <connection name = "LinuxTimer">
       <source component = "linuxTimer" port = "CycleOut" type = "Cycle" num = "0"/>
        <target component = "rateGroupDriverComp" port = "CycleIn" type = "Cycle" num = "0"/>
   </connection>

   <!-- 10Hz Rate Group -->
   <connection name = "rateGroupDriverComp10Hz">
       <source component = "rateGroupDriverComp" port = "CycleOut" type = "Cycle" num = "0"/>
        <target component = "rateGroup10HzComp" port = "CycleIn" type = "Cycle" num = "0"/>
   </connection>
   <connection name = "control10Hz">
       <source component = "rateGroup10HzComp" port = "RateGroupMemberOut" type = "Sched" num = "0"/>
        <target component = "control" port = "Run" type = "Sched" num = "0"/>
   </connection>
   <connection name = "fileDownlink10Hz">
       <source component = "rateGroup10HzComp" port = "RateGroupMemberOut" type = "Sched" num = "1"/>
        <target component = "fileDownlink" port = "Run" type = "Sched" num = "0"/>
   </connection>
   <connection name = "gps10Hz">
       <source component = "rateGroup10HzComp" port = "RateGroupMemberOut" type = "Sched" num = "2"/>
        <target component = "gps" port = "schedIn" type = "Sched" num = "0"/>
   </connection>

   <!-- 1Hz Rate Group -->
   <connection name = "rateGroupDriverCompRg1Hz">
       <source component = "rateGroupDriverComp" port = "CycleOut" type = "Cycle" num = "1"/>
        <target component = "rateGroup1HzComp" port = "CycleIn" type = "Cycle" num = "0"/>
   </connection>
   <connection name = "chanTlmRg">
       <source component = "rateGroup1HzComp" port = "RateGroupMemberOut" type = "Sched" num = "0"/>
        <target component = "chanTlm" port = "Run" type = "Sched" num = "0"/>
   </connection>
   <connection name = "healthRg">
       <source component = "rateGroup1HzComp" port = "RateGroupMemberOut" type = "Sched" num = "1"/>
        <target component = "health" port = "Run" type = "Sched" num = "0"/>
   </connection>
   <connection name = "control1Hz">
       <source component = "rateGroup1HzComp" port = "RateGroupMemberOut" type = "Sched" num = "2"/>
        <target component = "control" port = "Run" type = "Sched" num = "0"/>
   </connection>
   <connection name = "cmdSeq">
       <source component = "rateGroup1HzComp" port = "RateGroupMemberOut" type = "Sched" num = "3"/>
        <target component = "cmdSeq" port = "schedIn" type = "Sched" num = "0"/>
   </connection>
   
   <!-- Health Connections -->
   
   <!-- The PingSend output port number should match the PingReturn input port number -->
   <!-- Each port number pair must be unique -->
   <!-- This order must match the table in Topology.cpp -->

   <connection name = "rateGroup10HzCompPingIn">
       <source component = "health" port = "PingSend" type = "Ping" num = "0"/>
        <target component = "rateGroup10HzComp" port = "PingIn" type = "Ping" num = "0"/>
   </connection>
   <connection name = "rateGroup10HzCompPingOut">
       <source component = "rateGroup10HzComp" port = "PingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "0"/>
   </connection>

   <connection name = "rateGroup1HzCompPingIn">
       <source component = "health" port = "PingSend" type = "Ping" num = "1"/>
        <target component = "rateGroup1HzComp" port = "PingIn" type = "Ping" num = "0"/>
   </connection>
   <connection name = "rateGroup1HzCompPingOut">
       <source component = "rateGroup1HzComp" port = "PingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "1"/>
   </connection>
   
   <connection name = "cmdDispPingIn">
       <source component = "health" port = "PingSend" type = "Ping" num = "2"/>
        <target component = "cmdDisp" port = "pingIn" type = "Ping" num = "0"/>
   </connection>
   <connection name = "cmdDispPingOut">
       <source component = "cmdDisp" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "2"/>
   </connection>
   
   <connection name = "cmdSeqPingIn">
       <source component = "health" port = "PingSend" type = "Ping" num = "3"/>
        <target component = "cmdSeq" port = "pingIn" type = "Ping" num = "0"/>
   </connection>
   <connection name = "cmdSeqPingOut">
       <source component = "cmdSeq" port = "pingOut" type = "Ping" num = "0"/>
       <target component = "health" port = "PingReturn" type = "Ping" num = "3"/>
   </connection>
   
   <connection name = "chanTlmPingIn">
       <source component = "health" port = "PingSend" type = "Ping" num = "4"/>
        <target component = "chanTlm" port = "pingIn" type = "Ping" num = "0"/>
   </connection>
   <connection name = "chanTlmPingOut">
       <source component = "chanTlm" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "4"/>
   </connection>

   <connection name = "eventLoggerPingIn">
       <source component = "health" port = "PingSend" type = "Ping" num = "5"/>
        <target component = "eventLogger" port = "pingIn" type = "Ping" num = "0"/>
   </connection>
   <connection name = "eventLoggerPingOut">
       <source component = "eventLogger" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "5"/>
   </connection>
   
   <connection name = "prmDbPingIn">
       <source component = "health" port = "PingSend" type = "Ping" num = "6"/>
        <target component = "prmDb" port = "pingIn" type = "Ping" num = "0"/>
   </connection>
   <connection name = "prmDbPingOut">
       <source component = "prmDb" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "6"/>
   </connection>

   <connection name = "fileDownlinkPingIn">
       <source component = "health" port = "PingSend" type = "Ping" num = "7"/>
        <target component = "fileDownlink" port = "pingIn" type = "Ping" num = "0"/>
   </connection>
   <connection name = "fileDownlinkPingOut">
       <source component = "fileDownlink" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "7"/>
   </connection>
   
   <connection name = "fileUplinkPingIn">
       <source component = "health" port = "PingSend" type = "Ping" num = "8"/>
        <target component = "fileUplink" port = "pingIn" type = "Ping" num = "0"/>
   </connection>
   <connection name = "fileUplinkPingOut">
       <source component = "fileUplink" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "8"/>
   </connection>

   <!-- Uplink Connections -->
   
   <!-- Uplink connection to command dispatcher should not conflict with command sequencer -->
   <connection name = "cmdDispPkts">
       <source component = "groundIf" port = "uplinkPort" type = "Com" num = "0"/>
        <target component = "cmdDisp" port = "seqCmdBuff" type = "Com" num = "0"/>
   </connection>

   <connection name = "groundIfFileUplinkBufferGet">
       <source component = "groundIf" port = "fileUplinkBufferGet" type = "BufferGet" num = "0"/>
        <target component = "fileUplinkBufferManager" port = "bufferGetCallee" type = "BufferGet" num = "0"/>
   </connection>
   <connection name = "fileUplinkBuffIn">
       <source component = "fileUplink" port = "bufferSendOut" type = "BufferSend" num = "0"/>
        <target component = "fileUplinkBufferManager" port = "bufferSendIn" type = "BufferSend" num = "0"/>
   </connection>
   <connection name = "groundIfFileUplinkBufferSend">
       <source component = "groundIf" port = "fileUplinkBufferSendOut" type = "BufferSend" num = "0"/>
        <target component = "fileUplink" port = "bufferSendIn" type = "BufferSend" num = "0"/>
   </connection>

   <!-- Downlink Connections -->

   <connection name = "eventLoggerPkts">
       <source component = "eventLogger" port = "PktSend" type = "Com" num = "0"/>
        <target component = "groundIf" port = "downlinkPort" type = "Com" num = "0"/>
   </connection>
   
   <connection name = "chanTlmPkts">
       <source component = "chanTlm" port = "PktSend" type = "Com" num = "0"/>
        <target component = "groundIf" port = "downlinkPort" type = "Com" num = "0"/>
   </connection>
   
   <connection name = "fileDownlinkBufferSend">
       <source component = "fileDownlink" port = "bufferSendOut" type = "BufferSend" num = "0"/>
        <target component = "groundIf" port = "fileDownlinkBufferSendIn" type = "BufferSend" num = "0"/>
   </connection>
   
   <!-- Fault Connectionss -->
   <connection name = "eventLoggerFatalOut">
       <source component = "eventLogger" port = "FatalAnnounce" type = "FatalEvent" num = "0"/>
        <target component = "fatalHandler" port = "FatalReceive" type = "FatalEvent" num = "0"/>
   </connection>
   
   <!-- Driver connections -->
   
   <!-- GPIO connections -->
   <connection name = "gpioLed">
       <source component = "control" port = "GpioWrite" type = "GpioWrite" num = "4"/>
        <target component = "headlight" port = "gpioWrite" type = "GpioWrite" num = "0"/>
   </connection>
   <connection name = "gpio23">
       <source component = "control" port = "GpioWrite" type = "GpioWrite" num = "0"/>
        <target component = "forward" port = "gpioWrite" type = "GpioWrite" num = "0"/>
   </connection>
   <connection name = "gpio24">
       <source component = "control" port = "GpioWrite" type = "GpioWrite" num = "1"/>
        <target component = "backward" port = "gpioWrite" type = "GpioWrite" num = "0"/>
   </connection>
   <connection name = "gpio25">
       <source component = "control" port = "GpioWrite" type = "GpioRead" num = "2"/>
        <target component = "left" port = "gpioWrite" type = "GpioRead" num = "0"/>
   </connection>
   <connection name = "gpio17">
       <source component = "control" port = "GpioWrite" type = "GpioRead" num = "3"/>
        <target component = "right" port = "gpioWrite" type = "GpioRead" num = "0"/>
   </connection>
   
   <!-- UART connection -->
   
   <connection name = "uartIn">
       <source component = "serial" port = "serialRecv" type = "SerialRead" num = "0"/>
       <target component = "gps" port = "readCallback" type = "SerialRead" num = "0"/>
   </connection>
   <connection name = "uartBuff">
       <source component = "gps" port = "bufferReturn" type = "BufferSend" num = "0"/>
       <target component = "serial" port = "readBufferSend" type = "BufferSend" num = "0"/>
   </connection> 
</assembly>
